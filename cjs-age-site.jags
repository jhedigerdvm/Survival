
model {

#prior for recapture prob
p ~ dbeta(1, 1)
   

#priors
# age.beta[1] <- 0
site.beta[1] <- 0
int ~ dnorm(0, 0.001)

# for (u in 2:14){     #15 age classes but 14 survival periods                        
#    age.beta[u] ~ dnorm(0,0.01)              # Priors for age-specific survival
# }

for (u in 2:3){
  site.beta[u] ~ dnorm(0,0.01)
}

rain.beta ~ dnorm(0,0.01)


rain.site.beta[1] <-0

for (u in 2:3){
  rain.site.beta[u] ~ dnorm(0,0.01)
}

# Likelihood 
for (i in 1:nind){
   # Define latent state at first capture, we know for sure the animal is alive
      z[i,f[i]] <- 1
      
      for (t in (f[i]+1):h[i]){ 
        # State process
            z[i,t] ~ dbern(mu1[i,t]) #toss of a coin whether individual is alive or not detected 
            mu1[i,t] <- phi[i,t-1] * z[i,t-1]  #t-1 because we are looking ahead to see if they survived from 1 to 2 based upon them being alive at 2
            logit(phi[i,t-1]) <- int + site.beta[bs[i]] + rain.beta*rain[i,t-1]  + rain.site.beta[bs[i]]*rain[i,t-1]
              #error is 'invalid vector arg for ilogit', link functions cannot be vectorized 
              #is my issue because rain is a matrix?
          
          # Observation process
            ch[i,t] ~ dbern(mu2[i,t])
            mu2[i,t] <- p * z[i,t]
      } #t
   } #i


}

