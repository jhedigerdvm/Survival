
model {

#prior for recapture prob
p ~ dbeta(1, 1)


#priors
int ~ dnorm(0,0.01)

site.beta[1] <- 0

for (u in 2:3){
  site.beta[u] ~ dnorm(0,0.01)
}

rain.beta ~ dnorm(0,0.01)


rain.site.beta[1] <-0

for (u in 2:3){
  rain.site.beta[u] ~ dnorm(0,0.01)
}

# Likelihood
for (i in 1:nind){
   # Define latent state at first capture, we know for sure the animal is alive
      z[i,f[i]] <- 1

      for (t in (f[i]+1):h[i]){
        # State process
            z[i,t] ~ dbern(mu1[i,t]) #toss of a coin whether individual is alive or not detected
            mu1[i,t] <- phi[i,t-1] * z[i,t-1]  #t-1 because we are looking ahead to see if they survived from 1 to 2 based upon them being alive at 2
            logit(phi[i,t-1]) <- int + site.beta[bs[i]] + rain.beta*rain[i,t-1]  + rain.site.beta[bs[i]]*rain[i,t-1]

          # Observation process
            ch[i,t] ~ dbern(mu2[i,t])
            mu2[i,t] <- p * z[i,t]
      } #t
   } #i

#derived parameters
  for (i in 1:3){ #site and rain.site.beta
    for (j in 1:1000){ #rain
      survival[j,i] <- exp(int + site.beta[i] + rain.beta*spring.rain.sim[j] + rain.site.beta[i]*spring.rain.sim[j])/
                            (1 + exp(int + site.beta[i] + rain.beta*spring.rain.sim[j] + rain.site.beta[i]*spring.rain.sim[j]))
      }                     #delta method to convert from logit back to probability Powell et al. 2007
    }
}

