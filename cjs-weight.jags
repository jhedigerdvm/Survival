
model {

#prior for recapture prob
p ~ dbeta( 1 , 1 )

#priors

int ~ dnorm(0,0.01)
bs.beta[1] <- 0
bs.weight.beta[1] <- 0
# age.beta[1] <- 0
eps.capyear[1] <- 0
# 
# for (u in 2:15) { #ageclass beta
#   age.beta[u] ~ dnorm( 0, 0.01 )
# }

for (u in 2:3) { #bs and weight interaction
  bs.weight.beta[u] ~ dnorm( 0, 0.01)
}

for (u in 1:nind){
  for (j in 1:occasions[u]){  #prior for missing weights
  weight[u,NA_indices[u,j]] ~ dnorm( 0, 0.01)
     }
}

weight.beta ~ dnorm( 0, 0.01 )

age.beta ~ dnorm( 0 , 0.001 )


for (u in 2:3){                               #prior for birth site
  bs.beta[u] ~ dnorm( 0, 0.01 )
}

for (u in 2:14){
  eps.capyear[u] ~ dnorm(0, 0.01)
}


tau <- 1/(sigma*sigma)
sigma ~ dunif(0,20)


# Likelihood
for (i in 1:nind){
   # Define latent state at first capture, we know for sure the animal is alive
      z[i,f[i]] <- 1

      for (t in (f[i]+1):nocc){
        # State process
            z[i,t] ~ dbern(mu1[i,t]) #toss of a coin whether individual is alive or not detected
            logit(phi[i,t-1]) <- int + weight.beta*weight[i,t-1] + bs.beta[bs[i]] 
                                        + bs.weight.beta[bs[i]]*weight[i,t-1]  
                                        + age.beta*ageclass[i,t-1]
                                        + eps.capyear[capyear[i]]
            mu1[i,t] <- phi[i,t-1] * z[i,t-1]  
                                            

          # Observation process
            ch[i,t] ~ dbern(mu2[i,t])
            mu2[i,t] <- p * z[i,t]
      } #t
   } #i
# 
# #Derived parameters
# for (i in 1:100){ #weight.sim
#     for (j in 1:3){ # birthsites
#       for (k in 1:10) { # ageclass
#       survival[i,j,k] <- exp(int + weight.beta*weight.sim[i] + bs.beta[j] + bs.weight.beta[j]*weight.sim[i] + age.beta[k]) /
#                                 (1+exp(int + weight.beta*weight.sim[i] + bs.beta[j] +  bs.weight.beta[j]*weight.sim[i] + age.beta[k]))
#     }
# }
# 
# }
# # 
# # for (i in 1:100){ #weight.sim
# #     for (j in 1:3){ # birthsites
# #      
# #       survival[i,j] <- exp(int + weight.beta*weight.sim[i] + bs.beta[j] + bs.weight.beta[j]*weight.sim[i]) /
# #                                 (1+exp(int + weight.beta*weight.sim[i] + bs.beta[j] +  bs.weight.beta[j]*weight.sim[i]))
# #     }
# # }
# 
# 
# 
# for (i in c(1,50,100)){ #weight sim 1 50 and 100
#   for (j in 1:3) { #birthsite
#       site_diff [i,j] <- survival[i,1] - survival[i,j]
#     }
#   }
# 
# 
# for (i in c(1,100)){ #weight sim 1 50 and 100
#   for (j in 1:3) { #birthsite
#       surv_diff [i,j] <- survival[1,j] - survival[100,j]
#     }
#   }


}

