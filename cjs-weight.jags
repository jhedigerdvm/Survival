
model {

#prior for recapture prob
p ~ dbeta( 1 , 1 )

#priors
int ~ dnorm( 0 , 0.0001 )

bs.beta[1] <- 0
# ageclass.beta[1] <- 0
# eps.capyear[1] <- 0
bs.weight.beta[1] <- 0

for (u in 2:3) { #ageclass and weight interaction
  bs.weight.beta[u] ~ dnorm(0, 0.0001)
}

for (u in 1:nind){
  for (j in 1:occasions[u]){  #prior for missing weights
  weight[u,NA_indices[u,j]] ~ dnorm( 0 , 0.0001 )
     }
}

weight.beta ~ dnorm( 0 , 0.0001 )
# 
# for (u in 2:15){                              #prior for ageclass
#     ageclass.beta[u] ~ dnorm( 0 , 0.0001 )
#   }

for (u in 2:3){                               #prior for birth site
  bs.beta[u] ~ dnorm( 0 , 0.0001 )
}

# for (u in 2:15){
#   eps.capyear[u] ~ dnorm(0, tau)
# }

tau <- 1/(sigma*sigma)
sigma ~ dunif(0,100)


# Likelihood
for (i in 1:nind){
   # Define latent state at first capture, we know for sure the animal is alive
      z[i,f[i]] <- 1

      for (t in (f[i]+1):nocc){
        # State process
            z[i,t] ~ dbern(mu1[i,t]) #toss of a coin whether individual is alive or not detected
            logit(phi[i,t-1]) <- int + weight.beta*weight[i,t-1]  + bs.beta[bs[i]] 
                                        + bs.weight.beta[bs[i]]*weight[i,t-1] #+ eps.capyear[capyear[i]] #+ ageclass.beta[ageclass[i,t-1]]
            mu1[i,t] <- phi[i,t-1] * z[i,t-1]  
                                            

          # Observation process
            ch[i,t] ~ dbern(mu2[i,t])
            mu2[i,t] <- p * z[i,t]
      } #t
   } #i
# 
# #Derived parameters
# for (i in 1:100){ #weight.sim
#   for (j in 1:11) { #age
#     for (k in 1:3){ # birthsites
#       survival[i,j,k] <- exp(int + weight.beta*weight.sim[i]  + bs.beta[k] + bs.weight.beta[k]*weight.sim[i]) /
#                                 (1+exp(int + weight.beta*weight.sim[i]  + bs.beta[k] + bs.weight.beta[k]*weight.sim[i]))
#     }
# }                                         #+ ageclass.beta[j]+ ageclass.beta[j]
# }
      
  
}

