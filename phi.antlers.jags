
model {

#prior for recapture prob
p ~ dbeta(1, 1)


#priors
  int ~ dnorm(0, 0.001)
  beta1[1] <- 0 #age
  beta2[1] <- 0  #site
  eps1[1] <- 0 #capture year RE
  
  beta3 ~ dnorm(0,0.001)  #capture year rain beta 
  beta4 ~ dlnorm(0, 0.01)    # morpho beta 

  
  for ( u in 2:11) { 
    beta1[u] ~ dnorm(0, 0.001)  #age
  }
  
  for (u in 2:3) {  #site beta
    beta2[u] ~ dnorm(0, 0.001)  #site
  }

  
  for (u in 1:nind){      #prior for missing morphometrics
    for (j in 1:occasions[u]){
    morpho[u,NA_indices[u,j]] ~ dnorm( 0, 0.01)
       }
  }
  
  for (u in 2:12){  #prior for year effect
    eps1[u] ~ dnorm(0,tau)
  }
  
  tau <- 1/(sigma*sigma)
  sigma ~ dunif(0,100)


# Likelihood
for (i in 1:nind){
   # Define latent state at first capture, we know for sure the animal is alive
      z[i,f[i]] <- 1

      for (t in (f[i]+1):h[i]){
        # State process
            z[i,t] ~ dbern(mu1[i,t]) #toss of a coin whether individual is alive or not detected
            mu1[i,t] <- phi[i,t-1] * z[i,t-1]  #t-1 because we are looking ahead to see if they survived from 1 to 2 based upon them being alive at 2
            logit(phi[i,t-1]) <-  int + beta1[ageclass[i,t-1]]  #age categorical
                                      + beta2[bs[i]]            #birth site
                                      + beta3*rain[i, t-1]   #capture year rainfall
                                      + beta4* morpho[i, t-1]   #morphology  
                                      + eps1[year[i]]           #capture year random effect

          # Observation process
            ch[i,t] ~ dbern(mu2[i,t])
            mu2[i,t] <- p * z[i,t]
            
         
            
      } #t
   } #i

   #derived parameters
      for (i in 1:100 ) { #antlers simulation, beta3
      for (j in 1:3){ #site, beta2
      

      phi.antlers[i, j] <- exp( int+ beta4*morpho.sim[i]  + beta2[j]  )/
                            (1 + exp( int + beta4*morpho.sim[i]  + beta2[j]))

    } # for j
    } # for l
    
      for (i in 1:100 ) { #rain simulation, beta3
      for (j in 1:3){ #site, beta2

      phi.rain[i, j] <- exp( int + beta3*rain.sim[i]  + beta2[j]  )/
                            (1 + exp( int + beta3*rain.sim[i]  + beta2[j]))

    } # for j
    } # for l

    for (i in 1:11 ) { #age beta1
    for (j in 1:3){ #site, beta2

      phi.age[i, j] <- exp( int+ beta1[i]  + beta2[j]  )/
                            (1 + exp( int + beta1[i]  + beta2[j]))

    } # for j
    } # for l

}

